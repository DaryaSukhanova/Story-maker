<svg xmlns="http://www.w3.org/2000/svg" width="1000" height="1000" viewbox="0 0 1000 1000"><path stroke="black" stroke-width="2" fill="none" d="M 110.5 48 L 110.5 47 L 111.5 47 L 111.5 46 L 112.5 46 L 113.5 46 L 113.5 45 L 114.5 45 L 115.5 45 L 116.5 45 L 116.5 44 L 117.5 44 L 119.5 44 L 120.5 43 L 121.5 42 L 123.5 42 L 124.5 42 L 125.5 42 L 127.5 41 L 128.5 41 L 130.5 40 L 132.5 40 L 134.5 40 L 137.5 39 L 139.5 39 L 141.5 39 L 144.5 38 L 147.5 38 L 150.5 37 L 153.5 37 L 156.5 37 L 159.5 37 L 162.5 37 L 165.5 36 L 169.5 36 L 173.5 36 L 177.5 36 L 182.5 36 L 185.5 36 L 189.5 36 L 193.5 36 L 197.5 36 L 201.5 35 L 206.5 34 L 210.5 34 L 214.5 34 L 218.5 34 L 222.5 34 L 228.5 33 L 232.5 33 L 237.5 33 L 243.5 33 L 248.5 33 L 253.5 33 L 259.5 33 L 263.5 33 L 268.5 33 L 274.5 32 L 278.5 32 L 282.5 32 L 286.5 32 L 291.5 32 L 296.5 32 L 300.5 32 L 304.5 32 L 308.5 32 L 312.5 32 L 317.5 32 L 320.5 31 L 323.5 31 L 326.5 31 L 329.5 31 L 332.5 31 L 335.5 31 L 337.5 31 L 339.5 31 L 341.5 31 L 342.5 31 L 344.5 31 L 345.5 31 L 346.5 31 L 347.5 31 L 348.5 31 L 349.5 31 L 348.5 31 L 347.5 31 L 347.5 32 L 346.5 32 L 345.5 32 L 344.5 33 L 344.5 34 L 343.5 34 L 343.5 35 L 342.5 35 L 341.5 36 L 340.5 36 L 339.5 37 L 338.5 38 L 336.5 39 L 335.5 39 L 333.5 40 L 332.5 41 L 330.5 41 L 328.5 42 L 325.5 43 L 323.5 44 L 321.5 44 L 319.5 45 L 317.5 46 L 314.5 46 L 312.5 47 L 309.5 48 L 306.5 49 L 303.5 50 L 301.5 50 L 299.5 51 L 296.5 52 L 293.5 52 L 291.5 53 L 289.5 54 L 287.5 55 L 285.5 55 L 282.5 56 L 280.5 57 L 278.5 58 L 276.5 58 L 274.5 59 L 273.5 60 L 272.5 60 L 270.5 61 L 269.5 61 L 268.5 61 L 266.5 61 L 266.5 62 L 265.5 62 L 264.5 62 L 265.5 62 L 266.5 62 L 267.5 62 L 268.5 62 L 270.5 62 L 271.5 62 L 272.5 62 L 274.5 62 L 275.5 62 L 277.5 62 L 279.5 62 L 281.5 62 L 283.5 62 L 286.5 62 L 288.5 61 L 291.5 60 L 293.5 60 L 296.5 60 L 299.5 60 L 302.5 59 L 305.5 59 L 308.5 59 L 311.5 58 L 314.5 58 L 317.5 58 L 320.5 58 L 323.5 58 L 326.5 58 L 329.5 58 L 332.5 57 L 335.5 57 L 338.5 57 L 341.5 57 L 344.5 57 L 346.5 56 L 349.5 56 L 351.5 56 L 353.5 56 L 355.5 56 L 357.5 56 L 358.5 56 L 360.5 56 L 361.5 56 L 362.5 56 L 363.5 55 L 364.5 55 L 365.5 55" id="animatedElementId"></path><path stroke="red" stroke-width="2" fill="none" id="motionPath" d="M 188.5 161 L 180.5 160 L 173.5 159 L 168.5 158 L 163.5 157 L 160.5 156 L 158.5 156 L 156.5 155 L 154.5 154 L 153.5 154 L 153.5 153 L 152.5 153 L 152.5 152 L 153.5 152 L 153.5 151 L 154.5 151 L 155.5 150 L 156.5 150 L 157.5 149 L 159.5 148 L 161.5 147 L 163.5 146 L 165.5 145 L 167.5 144 L 170.5 143 L 173.5 141 L 176.5 140 L 179.5 138 L 183.5 136 L 187.5 136 L 191.5 135 L 196.5 134 L 200.5 133 L 206.5 132 L 211.5 131 L 217.5 130 L 223.5 129 L 228.5 128 L 234.5 127 L 241.5 126 L 248.5 125 L 254.5 125 L 261.5 124 L 268.5 124 L 275.5 124 L 282.5 123 L 290.5 123 L 298.5 122 L 306.5 122 L 314.5 122 L 322.5 122 L 330.5 122 L 339.5 122 L 349.5 121 L 358.5 121 L 367.5 121 L 377.5 120 L 386.5 120 L 395.5 119 L 406.5 119 L 417.5 119 L 427.5 119 L 438.5 119 L 449.5 118 L 459.5 118 L 470.5 118 L 481.5 117 L 491.5 117 L 503.5 117 L 514.5 117 L 522.5 117 L 531.5 116 L 541.5 116 L 550.5 116 L 561.5 115 L 571.5 115 L 581.5 115 L 591.5 114 L 602.5 114 L 611.5 114 L 622.5 113 L 631.5 113 L 641.5 113 L 650.5 113 L 659.5 113 L 667.5 113 L 676.5 112 L 684.5 112 L 692.5 112 L 698.5 112 L 704.5 112 L 709.5 111 L 715.5 111 L 720.5 111 L 724.5 111 L 727.5 111 L 730.5 111 L 733.5 111 L 735.5 111 L 737.5 111 L 738.5 111 L 739.5 111 L 740.5 111 L 741.5 111 L 740.5 111 L 738.5 111 L 737.5 111 L 736.5 111 L 734.5 111 L 732.5 111 L 729.5 111 L 727.5 111 L 724.5 111 L 721.5 111 L 717.5 112 L 713.5 112 L 709.5 112 L 704.5 112 L 699.5 113 L 693.5 113 L 686.5 114 L 680.5 115 L 673.5 116 L 666.5 116 L 658.5 117 L 650.5 117 L 642.5 118 L 634.5 118 L 624.5 119 L 615.5 120 L 605.5 121 L 595.5 122 L 584.5 124 L 574.5 125 L 564.5 126 L 553.5 127 L 541.5 128 L 529.5 129 L 517.5 130 L 505.5 131 L 493.5 132 L 481.5 134 L 469.5 136 L 457.5 137 L 445.5 138 L 432.5 140 L 420.5 141 L 408.5 143 L 396.5 144 L 384.5 145 L 373.5 146 L 363.5 148 L 352.5 150 L 341.5 151 L 332.5 152 L 322.5 153 L 314.5 155 L 306.5 156 L 299.5 157 L 292.5 158 L 286.5 159 L 281.5 160 L 276.5 161 L 272.5 162 L 269.5 162 L 266.5 163 L 264.5 163 L 263.5 163 L 261.5 163 L 260.5 163 L 259.5 163 L 260.5 163 L 262.5 163 L 263.5 163 L 264.5 162 L 267.5 162 L 269.5 161 L 271.5 161 L 274.5 160 L 277.5 160 L 280.5 159 L 284.5 159 L 289.5 158 L 293.5 158 L 297.5 157 L 302.5 157 L 308.5 157 L 313.5 156 L 319.5 156 L 326.5 156 L 332.5 156 L 339.5 156 L 346.5 156 L 353.5 156 L 359.5 155 L 366.5 155 L 373.5 154 L 380.5 154 L 385.5 154 L 391.5 154 L 396.5 154 L 402.5 153 L 407.5 153 L 412.5 153 L 418.5 153 L 422.5 153 L 426.5 153 L 430.5 153 L 433.5 153 L 436.5 153 L 439.5 153 L 441.5 153 L 443.5 153 L 445.5 153 L 446.5 153 L 447.5 153 L 448.5 153 L 449.5 153 L 450.5 153 L 449.5 153"></path><script>
            <![CDATA[
                this.play = true
                this.currentSpeed = 20
                let distanceCovered = 0;
                let isAnimationSaved = false;
                let isUpdateTime = false
                
                function animate(element) {
    const motionPath = document.getElementById('motionPath');
    const totalLength = motionPath.getTotalLength();
    distanceCovered = 0;
    let speed = this.currentSpeed;
    element.setAttribute("x", 0);
    element.setAttribute("y", 0);
    const moveAlongPath = () => {
      if (this.play) {
        const point = motionPath.getPointAtLength(distanceCovered);
        if (element.hasAttribute("d")) {
          const initialX = element.getPointAtLength(0).x;
          const initialY = element.getPointAtLength(0).y;
          element.setAttribute("transform", `translate(${point.x - initialX} ${point.y - initialY})`);
        } else {
          element.setAttribute("transform", `translate(${point.x} ${point.y})`);
        }
        speed = this.currentSpeed;
        distanceCovered += speed;
        if (distanceCovered <= totalLength) {
          requestAnimationFrame(moveAlongPath);
        } else {
          distanceCovered = 0;
          const newStartTime = Date.now();
          if (isUpdateTime) {
            _store_animationToolState__WEBPACK_IMPORTED_MODULE_1__["default"].setStartTime(newStartTime);
          }
          requestAnimationFrame(moveAlongPath);
          if (!isAnimationSaved) {
            isAnimationSaved = true;
            this.saveAnimatedSvg();
          }
        }
      } else {
        requestAnimationFrame(moveAlongPath);
      }
    };
    moveAlongPath();
  }
                const animatedElement = document.getElementById('animatedElementId');
                animate(animatedElement);
            ]]>
        </script></svg>