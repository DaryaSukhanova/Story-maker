<svg xmlns="http://www.w3.org/2000/svg" width="1000" height="1000" viewbox="0 0 1000 1000"><rect stroke="#8DADFF" stroke-width="3" fill="none" x="194" y="85" width="45" height="44" id="animatedElementId"></rect><path stroke="red" stroke-width="2" fill="none" id="motionPath" d="M 284 217 L 292 201 L 303 178 L 323 145 L 340 122 L 345 117 L 350 113 L 353 112 L 358 111 L 368 106 L 375 104 L 388 100 L 410 96 L 421 96 L 439 97 L 451 99 L 460 102 L 470 105 L 473 105 L 475 105 L 476 105 L 478 105 L 480 104 L 485 101"></path><script>
            <![CDATA[
                this.play = true
                this.currentSpeed = 20
                let distanceCovered = 0;
                let isAnimationSaved = false;
                let isUpdateTime = false
                
                function animate(element) {
    const motionPath = document.getElementById('motionPath');
    const totalLength = motionPath.getTotalLength();
    distanceCovered = 0;
    let speed = this.currentSpeed;
    element.setAttribute("x", 0);
    element.setAttribute("y", 0);
    const moveAlongPath = () => {
      if (this.play) {
        const point = motionPath.getPointAtLength(distanceCovered);
        if (element.hasAttribute("d")) {
          const initialX = element.getPointAtLength(0).x;
          const initialY = element.getPointAtLength(0).y;
          element.setAttribute("transform", `translate(${point.x - initialX} ${point.y - initialY})`);
        } else {
          element.setAttribute("transform", `translate(${point.x} ${point.y})`);
        }
        speed = this.currentSpeed;
        distanceCovered += speed;
        if (distanceCovered <= totalLength) {
          requestAnimationFrame(moveAlongPath);
        } else {
          distanceCovered = 0;
          const newStartTime = Date.now();
          if (isUpdateTime) {
            _store_animationToolState__WEBPACK_IMPORTED_MODULE_1__["default"].setStartTime(newStartTime);
          }
          requestAnimationFrame(moveAlongPath);
          if (_store_animationToolState__WEBPACK_IMPORTED_MODULE_1__["default"].isAnimationSaved) {
            console.log("isSave");
            this.saveAnimatedSvg();
            _store_animationToolState__WEBPACK_IMPORTED_MODULE_1__["default"].isAnimationSaved = false;
          }
        }
      } else {
        requestAnimationFrame(moveAlongPath);
      }
    };
    moveAlongPath();
  }
                const animatedElement = document.getElementById('animatedElementId');
                animate(animatedElement);
            ]]>
        </script></svg>